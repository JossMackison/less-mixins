/*
	Mixins
	==============================
	
	Helpers to pump out CSS
	
	* Fill Space
	* Scrollable areas
	* Inline align
*/



/*
  Fill Space
  ====================

  Element will fill all available vertical and horizontal space provided by it's parent

  Notes
  --------------------
  * Apply attribute "auto" to either top / bottom if the element has a height
  * Apply attribute "auto" to either left / right if the element has a width

*/
.fill-space(@top:0,@right:0,@bottom:0,@left:0) {
	position: absolute;
	bottom: @bottom;
	left: @left;
	right: @right;
	top: @top;
}





/*
  Scrollable
  ====================

  Areas will sometimes lose their ability to scroll when manipulated, particularly iOS.
  This mixin will re-introduce correct scrolling behaviour

  Notes
  --------------------
  * Use the variables "x,y" to indicate which direction you want to be able to scroll

*/
.scrollable(@direction) {
	overflow: auto;
	-webkit-overflow-scrolling: touch;
	-moz-overflow-scrolling: touch;
	-o-overflow-scrolling: touch;
	-ms-overflow-scrolling: touch;
	overflow-scrolling: touch;
}
.scrollable(@direction) when(@direction = x) {
	overflow: hidden;
	overflow-x: auto;
}
.scrollable(@direction) when(@direction = y) {
	overflow: hidden;
	overflow-y: auto;
}





/*
	Inline align
	====================

	Element will align with it's siblings along a lateral axis

	Notes
	====================
	* Defaults to middle
	* Other options
		- baseline / sub / super / top / text-top / middle / bottom / text-bottom / inherit

*/
.inline-align(@alignment: middle) {
	display: inline-block;
	vertical-align: @alignment;
}